{"version":3,"sources":["dom6.js"],"names":["Object","defineProperty","exports","value","eventListenerHandlers","Map","_default","getTopDom","target","selector","className","indexOf","parentDom","parentNode","document","body","off","on","once","addClass","el","classNames","arguments","length","undefined","split","i","classList","add","removeClass","remove","hasClass","contains","attr","property","insertAfter","newElement","targetElement","parent","lastChild","appendChild","insertBefore","nextSibling","append","children","childrenEl","String","this","createElement","prepend","firstEl","firstChild","removeChild","html","dom","innerHTML","firstElementChild","prevSibling","result","index","getParentElementByTag","tag","element","popup","parentElement","tagParent","tagName","toLocaleLowerCase","Array","prototype","filter","call","t","nodeType","isTouch","objectToDataSet","obj","p","dataset","dataSetToObject","getPageLeft","left","offsetLeft","offsetParent","getPageTop","top","offsetTop","getPageRect"],"mappings":"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","file":"dom6.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar eventListenerHandlers = new Map();\n/**\r\n * dom6\r\n */\n\nvar _default = {\n  /**\r\n   * getTopDom\r\n   * @param {HtmlElement} target\r\n   * @param {string} selector\r\n   * @return {HtmlElement}\r\n   */\n  getTopDom: function getTopDom(target, selector) {\n    if (!target || !selector) return null;\n\n    if (target.className.indexOf(selector) !== -1) {\n      return target;\n    }\n\n    var parentDom = target;\n\n    while (parentDom = parentDom.parentNode) {\n      if (parentDom.className.indexOf(selector) !== -1) {\n        break;\n      } else if (parentDom === document.body) break;\n    }\n\n    if (parentDom) {\n      return parentDom;\n    } else {\n      return null;\n    }\n  },\n  off: function off() {},\n  on: function on() {},\n  once: function once() {},\n\n  /**\r\n   * addClass\r\n   * @param {HTMLElement} el\r\n   * @param {String} classes\r\n   */\n  addClass: function addClass(el) {\n    var classes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var classNames = classes.split(' ');\n\n    for (var i = 0; i < classNames.length; i++) {\n      el.classList.add(classNames[i]);\n    }\n  },\n\n  /**\r\n   * removeClass\r\n   * @param {HTMLElement} el\r\n   * @param {String} classes\r\n   */\n  removeClass: function removeClass(el) {\n    var classes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var classNames = classes.split(' ');\n\n    for (var i = 0; i < classNames.length; i++) {\n      el.classList.remove(classNames[i]);\n    }\n  },\n\n  /**\r\n   * hasClass\r\n   * @param {HTMLElement} el\r\n   * @param {String} className\r\n   * @return {Boolean}\r\n   */\n  hasClass: function hasClass(el, className) {\n    return el.classList.contains(className);\n  },\n\n  /**\r\n   * attr\r\n   * @param {HTMLElement} el\r\n   * @param {Object} property\r\n   * @param {Object} value\r\n   */\n  attr: function attr(el, property, value) {},\n\n  /**\r\n   * DOM没有提供insertAfter()方法\r\n   * @param {HtmlElement} newElement\r\n   * @param {HtmlElement} targetElement\r\n   */\n  insertAfter: function insertAfter(newElement, targetElement) {\n    var parent = targetElement.parentNode;\n\n    if (parent.lastChild === targetElement) {\n      // 如果最后的节点是目标元素，则直接添加。因为默认是最后\n      parent.appendChild(newElement);\n    } else {\n      parent.insertBefore(newElement, targetElement.nextSibling); // 如果不是，则插入在目标元素的下一个兄弟节点 的前面。也就是目标元素的后面\n    }\n  },\n\n  /**\r\n   * append\r\n   * @param {HTMLElement} - el\r\n   * @param {HTMLElement | String} - children\r\n   */\n  append: function append(el, children) {\n    var childrenEl;\n\n    if (children instanceof String) {\n      childrenEl = this.createElement(children);\n    } else {\n      childrenEl = children;\n    }\n\n    el.appendChild(childrenEl);\n  },\n\n  /**\r\n   * prepend\r\n   * @param {HTMLElement} - el\r\n   * @param {HTMLElement | String} - children\r\n   */\n  prepend: function prepend(el, children) {\n    var childrenEl;\n\n    if (children instanceof String) {\n      childrenEl = this.createElement(children);\n    } else {\n      childrenEl = children;\n    }\n\n    var firstEl = el.firstChild;\n    el.insertBefore(childrenEl, firstEl);\n  },\n\n  /**\r\n   * remove\r\n   * @param {HTMLElement} - el\r\n   */\n  remove: function remove(el) {\n    el.parentNode.removeChild(el);\n  },\n\n  /**\r\n   * createElement\r\n   * @param {string} html\r\n   * @return {HtmlElement}\r\n   */\n  createElement: function createElement(html) {\n    var dom = document.createElement('div');\n    dom.innerHTML = html;\n    return dom.firstElementChild;\n  },\n\n  /**\r\n   * prevSibling\r\n   * @param {HtmlElement} dom\r\n   * @return {HtmlElement}\r\n   */\n  prevSibling: function prevSibling(dom) {\n    var result,\n        index = -1;\n    if (!dom || !dom.parentNode) return result;\n    var children = dom.parentNode.children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (dom === children[i]) {\n        index = i;\n        break;\n      }\n    }\n\n    if (index !== -1) {\n      if (index === 0) {\n        result = children[0];\n      } else {\n        result = children[index - 1];\n      }\n    }\n\n    return result;\n  },\n\n  /**\r\n   * nextSibling\r\n   * @param {HtmlElement} dom\r\n   * @return {HtmlElement}\r\n   */\n  nextSibling: function nextSibling(dom) {\n    var result,\n        index = -1;\n    if (!dom || !dom.parentNode) return result;\n    var children = dom.parentNode.children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (dom === children[i]) {\n        index = i;\n        break;\n      }\n    }\n\n    if (index !== -1) {\n      if (index === children.length - 1) {\n        result = children[0];\n      } else {\n        result = children[index + 1];\n      }\n    }\n\n    return result;\n  },\n\n  /**\r\n   * getParentElementByTag\r\n   * @param {HtmlElement} el\r\n   * @param {string} tag\r\n   * @return {HtmlElement}\r\n   */\n  getParentElementByTag: function getParentElementByTag(el, tag) {\n    if (!tag) return null;\n    var element;\n    var parent = el;\n\n    var popup = function popup() {\n      parent = parent.parentElement;\n      if (!parent) return null;\n      var tagParent = parent.tagName.toLocaleLowerCase();\n\n      if (tagParent === tag) {\n        element = parent;\n      } else if (tagParent === 'body') {\n        element = null;\n      } else {\n        popup();\n      }\n    };\n\n    popup();\n    return element;\n  },\n\n  /**\r\n   * children\r\n   * @param {HTMLElement} el\r\n   * @param {string} selector\r\n   */\n  children: function children(el, selector) {\n    var elements = Array.prototype.filter.call(el.children, function (t) {\n      return t.nodeType === 1;\n    });\n    return elements.filter(function (t) {\n      return t.classList.contains(selector);\n    });\n  },\n\n  /**\r\n   * isTouch\r\n   * @return {boolean}\r\n   */\n  isTouch: function isTouch() {\n    return 'ontouchend' in document;\n  },\n\n  /**\r\n   * objToDataset\r\n   * @param {Object} - obj\r\n   * @param {HTMLElement} - dom\r\n   */\n  objectToDataSet: function objectToDataSet(obj, dom) {\n    for (var p in obj) {\n      dom.dataset[p] = obj[p];\n    }\n  },\n\n  /**\r\n   * dataSetToObj\r\n   * @param {HTMLElement} - dom\r\n   * @returns {Object}\r\n   */\n  dataSetToObject: function dataSetToObject(dom) {\n    var obj = {};\n\n    for (var p in dom.dataset) {\n      obj[p] = dom.dataset[p];\n    }\n\n    return obj;\n  },\n\n  /**\r\n   * getPageLeft\r\n   * @param {HTMLElement} - el\r\n   * @return {Number}\r\n   */\n  getPageLeft: function getPageLeft(el) {\n    var left = el.offsetLeft;\n    var offsetParent = null;\n\n    while (offsetParent = el.offsetParent) {\n      left += offsetParent.offsetLeft;\n    }\n\n    return left;\n  },\n\n  /**\r\n   * getPageTop\r\n   * @param {HTMLElement} - el\r\n   * @return {Number}\r\n   */\n  getPageTop: function getPageTop(el) {\n    var top = el.offsetTop;\n    var offsetParent = null;\n\n    while (offsetParent = el.offsetParent) {\n      top += offsetParent.offsetTop;\n    }\n\n    return top;\n  },\n\n  /**\r\n   * getPageRect\r\n   * @param {HTMLElement} - el\r\n   * @return {{top: number, left: number}}\r\n   */\n  getPageRect: function getPageRect(el) {\n    var top = el.offsetTop;\n    var left = el.offsetLeft;\n    var offsetParent = null;\n\n    while (offsetParent = el.offsetParent) {\n      top += offsetParent.offsetTop;\n      left += offsetParent.offsetLeft;\n    }\n\n    return {\n      top: top,\n      left: left\n    };\n  }\n};\nexports[\"default\"] = _default;"]}