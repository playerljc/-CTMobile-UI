{"version":3,"sources":["dom6.js"],"names":["Object","defineProperty","exports","value","default","_default","getTopDom","target","selector","className","indexOf","parentDom","parentNode","document","body","insertAfter","newElement","targetElement","parent","lastChild","appendChild","insertBefore","nextSibling","createElement","html","dom","innerHTML","firstChild","prevSibling","result","index","children","i","length"],"mappings":"AAAA,aAEAA,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,OAAO,IAETD,QAAQE,aAAU,EAKlB,IAAIC,SAAW,CAObC,UAAW,SAAmBC,EAAQC,GACpC,IAAKD,IAAWC,EAAU,OAAO,KAEjC,IAA4C,IAAxCD,EAAOE,UAAUC,QAAQF,GAC3B,OAAOD,EAKT,IAFA,IAAII,EAAYJ,GAETI,EAAYA,EAAUC,cACoB,IAA3CD,EAAUF,UAAUC,QAAQF,IAErBG,IAAcE,SAASC,OAGpC,OAAIH,GAGK,MASXI,YAAa,SAAqBC,EAAYC,GAC5C,IAAIC,EAASD,EAAcL,WAEvBM,EAAOC,YAAcF,EAEvBC,EAAOE,YAAYJ,GAEnBE,EAAOG,aAAaL,EAAYC,EAAcK,cASlDC,cAAe,SAAuBC,GACpC,IAAIC,EAAMZ,SAASU,cAAc,OAEjC,OADAE,EAAIC,UAAYF,EACTC,EAAIE,YAQbC,YAAa,SAAqBH,GAChC,IAAII,EACAC,GAAS,EACb,IAAKL,IAAQA,EAAIb,WAAY,OAAOiB,EAGpC,IAFA,IAAIE,EAAWN,EAAIb,WAAWmB,SAErBC,EAAI,EAAGA,EAAID,EAASE,OAAQD,IACnC,GAAIP,IAAQM,EAASC,GAAI,CACvBF,EAAQE,EACR,MAYJ,OARe,IAAXF,IAEAD,EADY,IAAVC,EACOC,EAAS,GAETA,EAASD,EAAQ,IAIvBD,GAQTP,YAAa,SAAqBG,GAChC,IAAII,EACAC,GAAS,EACb,IAAKL,IAAQA,EAAIb,WAAY,OAAOiB,EAGpC,IAFA,IAAIE,EAAWN,EAAIb,WAAWmB,SAErBC,EAAI,EAAGA,EAAID,EAASE,OAAQD,IACnC,GAAIP,IAAQM,EAASC,GAAI,CACvBF,EAAQE,EACR,MAYJ,OARe,IAAXF,IAEAD,EADEC,IAAUC,EAASE,OAAS,EACrBF,EAAS,GAETA,EAASD,EAAQ,IAIvBD,IAGX3B,QAAQE,QAAUC","file":"dom6.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\r\n * dom6\r\n */\nvar _default = {\n  /**\r\n   * getTopDom\r\n   * @param {HtmlElement} target\r\n   * @param {string} selector\r\n   * @return {HtmlElement}\r\n   */\n  getTopDom: function getTopDom(target, selector) {\n    if (!target || !selector) return null;\n\n    if (target.className.indexOf(selector) !== -1) {\n      return target;\n    }\n\n    var parentDom = target;\n\n    while (parentDom = parentDom.parentNode) {\n      if (parentDom.className.indexOf(selector) !== -1) {\n        break;\n      } else if (parentDom === document.body) break;\n    }\n\n    if (parentDom) {\n      return parentDom;\n    } else {\n      return null;\n    }\n  },\n\n  /**\r\n   * DOM没有提供insertAfter()方法\r\n   * @param {HtmlElement} newElement\r\n   * @param {HtmlElement} targetElement\r\n   */\n  insertAfter: function insertAfter(newElement, targetElement) {\n    var parent = targetElement.parentNode;\n\n    if (parent.lastChild === targetElement) {\n      // 如果最后的节点是目标元素，则直接添加。因为默认是最后\n      parent.appendChild(newElement);\n    } else {\n      parent.insertBefore(newElement, targetElement.nextSibling); //如果不是，则插入在目标元素的下一个兄弟节点 的前面。也就是目标元素的后面\n    }\n  },\n\n  /**\r\n   * createElement\r\n   * @param {string} html\r\n   * @return {HtmlElement}\r\n   */\n  createElement: function createElement(html) {\n    var dom = document.createElement('div');\n    dom.innerHTML = html;\n    return dom.firstChild;\n  },\n\n  /**\r\n   * prevSibling\r\n   * @param {HtmlElement} dom\r\n   * @return {HtmlElement}\r\n   */\n  prevSibling: function prevSibling(dom) {\n    var result,\n        index = -1;\n    if (!dom || !dom.parentNode) return result;\n    var children = dom.parentNode.children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (dom === children[i]) {\n        index = i;\n        break;\n      }\n    }\n\n    if (index !== -1) {\n      if (index === 0) {\n        result = children[0];\n      } else {\n        result = children[index - 1];\n      }\n    }\n\n    return result;\n  },\n\n  /**\r\n   * nextSibling\r\n   * @param {HtmlElement} dom\r\n   * @return {HtmlElement}\r\n   */\n  nextSibling: function nextSibling(dom) {\n    var result,\n        index = -1;\n    if (!dom || !dom.parentNode) return result;\n    var children = dom.parentNode.children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (dom === children[i]) {\n        index = i;\n        break;\n      }\n    }\n\n    if (index !== -1) {\n      if (index === children.length - 1) {\n        result = children[0];\n      } else {\n        result = children[index + 1];\n      }\n    }\n\n    return result;\n  }\n};\nexports.default = _default;"]}