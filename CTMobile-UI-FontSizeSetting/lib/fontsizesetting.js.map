{"version":3,"sources":["fontsizesetting.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_default","_classCallCheck2","_createClass2","getTemplateStr","arguments","length","undefined","initial","this","el","innerHTML","config","trigger","type","params","events","FontSizeSetting","self","call","range","querySelector","addEventListener","key","min","setAttribute","max","setp","handler"],"mappings":"AAAA,aAEA,IAAIA,uBAAyBC,QAAQ,gDAErCC,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,OAAO,IAETD,QAAQE,QAAUC,SAElB,IAAIC,iBAAmBR,uBAAuBC,QAAQ,0CAElDQ,cAAgBT,uBAAuBC,QAAQ,uCAQnD,SAASS,iBACyB,EAAnBC,UAAUC,aAA+BC,IAAjBF,UAAU,IAAmBA,UAAU,GAM5E,MAAO,ocAQT,SAASG,UACPC,KAAKC,GAAGC,UAAYP,eAAeK,KAAKG,QAU1C,SAASC,UACP,IAAIC,EAA0B,EAAnBT,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,SAC3EU,EAA4B,EAAnBV,UAAUC,OAAaD,UAAU,QAAKE,EAE/CE,KAAKO,OAAOF,IACdL,KAAKO,OAAOF,GAAMC,GAUtB,IAAIE,gBAEJ,WAYE,SAASA,EAAgBP,EAAIE,IAC3B,EAAIV,iBAAiBF,SAASS,KAAMQ,GACpC,IAAIC,EAAOT,KACXA,KAAKC,GAAKA,EACVD,KAAKO,OAAS,GACdP,KAAKG,OAASA,EACdJ,QAAQW,KAAKV,MACbA,KAAKW,MAAQX,KAAKC,GAAGW,cAAc,uBACnCZ,KAAKW,MAAME,iBAAiB,SAAU,WAChCJ,EAAKF,OAAe,QACtBH,QAAQM,KAAKD,EAAM,SAAUT,KAAKV,SAEnC,GAwEL,OAhEA,EAAII,cAAcH,SAASiB,EAAiB,CAAC,CAC3CM,IAAK,SACLxB,MAAO,WACL,IAAIyB,EAAyB,EAAnBnB,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC9EI,KAAKW,MAAMK,aAAa,MAAOD,KAOhC,CACDD,IAAK,SACLxB,MAAO,WACL,IAAI2B,EAAyB,EAAnBrB,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,MAC9EI,KAAKW,MAAMK,aAAa,MAAOC,KAOhC,CACDH,IAAK,UACLxB,MAAO,WACL,IAAI4B,EAA0B,EAAnBtB,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,IAC/EI,KAAKW,MAAMK,aAAa,OAAQE,KAOjC,CACDJ,IAAK,WACLxB,MAAO,SAAkBA,GACvBU,KAAKW,MAAMrB,MAAQA,EAEfU,KAAKO,OAAe,QACtBH,QAAQM,KAAKV,KAAM,SAAUA,KAAKW,MAAMrB,SAQ3C,CACDwB,IAAK,WACLxB,MAAO,WACL,OAAOU,KAAKW,MAAMrB,QAQnB,CACDwB,IAAK,KACLxB,MAAO,SAAYe,EAAMc,GACvBnB,KAAKO,OAAOF,GAAQc,MAGjBX,EAhGT,GA0GA,SAAShB,SAASS,EAAIE,GACpB,OAAO,IAAIK,gBAAgBP,EAAIE","file":"fontsizesetting.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\n/**\r\n * getTemplateStr\r\n * @access private\r\n * @param {object} config\r\n * @return {string}\r\n */\nfunction getTemplateStr() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    min: '0',\n    max: '100',\n    setp: '1',\n    value: '0'\n  };\n  return \"<div class=\\\"ct-fontsizesetting-rangeWrap\\\">\\n      <div class=\\\"ct-fontsizesetting-separatedtool\\\">\\n        <div class=\\\"ct-fontsizesetting-separated\\\"><span>\\u5C0F</span></div>\\n        <div class=\\\"ct-fontsizesetting-separated\\\"><span>\\u4E2D</span></div>\\n        <div class=\\\"ct-fontsizesetting-separated\\\"><span>\\u5927</span></div>\\n        <div class=\\\"ct-fontsizesetting-separated\\\"><span>\\u7279\\u5927</span></div>\\n      </div>\\n      <input type=\\\"range\\\" ...config>\\n    </div>\";\n}\n/**\r\n * initial\r\n * @access private\r\n */\n\n\nfunction initial() {\n  this.el.innerHTML = getTemplateStr(this.config);\n}\n/**\r\n * trigger\r\n * @access private\r\n * @param {string} type\r\n * @param {Object} params\r\n */\n\n\nfunction trigger() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'change';\n  var params = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (this.events[type]) {\n    this.events[type](params);\n  }\n}\n/**\r\n * FontSizeSetting\r\n * @class FontSizeSetting\r\n * @classdesc FontSizeSetting\r\n */\n\n\nvar FontSizeSetting =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * contrutor\r\n   * @param {HTMLElement} el 父容器\r\n   * @param {Object} config\r\n   * {\r\n   *   min:{string} 最小值\r\n   *   max:{string} 最大值\r\n   *   step:{string} 步进\r\n   *   value:{string} 当前值\r\n   * }\r\n   */\n  function FontSizeSetting(el, config) {\n    (0, _classCallCheck2.default)(this, FontSizeSetting);\n    var self = this;\n    this.el = el;\n    this.events = {};\n    this.config = config;\n    initial.call(this);\n    this.range = this.el.querySelector('input[type=\"range\"]');\n    this.range.addEventListener('change', function () {\n      if (self.events['change']) {\n        trigger.call(self, 'change', this.value);\n      }\n    }, false);\n  }\n  /**\r\n   * setMin\r\n   * @param {number} min\r\n   */\n\n\n  (0, _createClass2.default)(FontSizeSetting, [{\n    key: \"setMin\",\n    value: function setMin() {\n      var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.range.setAttribute('min', min);\n    }\n    /**\r\n     * setMax\r\n     * @param {number} max\r\n     */\n\n  }, {\n    key: \"setMax\",\n    value: function setMax() {\n      var max = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '100';\n      this.range.setAttribute('max', max);\n    }\n    /**\r\n     * setStep\r\n     * @param {number} setp\r\n     */\n\n  }, {\n    key: \"setSetp\",\n    value: function setSetp() {\n      var setp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '1';\n      this.range.setAttribute('setp', setp);\n    }\n    /**\r\n     * setValue\r\n     * @param {string} value\r\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.range.value = value;\n\n      if (this.events['change']) {\n        trigger.call(this, 'change', this.range.value);\n      }\n    }\n    /**\r\n     * getValue\r\n     * @return {string} value\r\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.range.value;\n    }\n    /**\r\n     * on\r\n     * @param {string} type\r\n     * @param {Function} handler\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(type, handler) {\n      this.events[type] = handler;\n    }\n  }]);\n  return FontSizeSetting;\n}();\n/**\r\n * FontSizeSettingFactory\r\n * @param {HtmlElement} el\r\n * @param {Object} config\r\n * @return {FontSizeSetting}\r\n */\n\n\nfunction _default(el, config) {\n  return new FontSizeSetting(el, config);\n}"]}