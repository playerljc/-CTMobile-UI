{"version":3,"sources":["jquery.pin.js"],"names":["$","fn","pin","options","scrollY","elements","disabled","$window","window","recalculateLimits","i","len","length","$this","minWidth","width","parent","is","unwrap","css","left","top","position","activeClass","removeClass","$container","containerSelector","closest","document","body","offset","containerOffset","parentOffset","offsetParent","wrap","pad","extend","bottom","padding","data","from","to","height","outerHeight","end","parentTop","outerWidth","onScroll","scrollTop","elmts","push","addClass","update","this","each","one","scroll","resize","onload"],"mappings":"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","file":"jquery.pin.js","sourcesContent":["\"use strict\";\n\n$.fn.pin = function (options) {\n  var scrollY = 0,\n      elements = [],\n      disabled = false,\n      $window = $(window);\n  options = options || {};\n\n  var recalculateLimits = function recalculateLimits() {\n    for (var i = 0, len = elements.length; i < len; i++) {\n      var $this = elements[i];\n\n      if (options.minWidth && $window.width() <= options.minWidth) {\n        if ($this.parent().is(\".pin-wrapper\")) {\n          $this.unwrap();\n        }\n\n        $this.css({\n          width: \"\",\n          left: \"\",\n          top: \"\",\n          position: \"\"\n        });\n\n        if (options.activeClass) {\n          $this.removeClass(options.activeClass);\n        }\n\n        disabled = true;\n        continue;\n      } else {\n        disabled = false;\n      }\n\n      var $container = options.containerSelector ? $this.closest(options.containerSelector) : $(document.body);\n      var offset = $this.offset();\n      var containerOffset = $container.offset();\n      var parentOffset = $this.offsetParent().offset();\n\n      if (!$this.parent().is(\".pin-wrapper\")) {\n        $this.wrap(\"<div class='pin-wrapper'>\");\n      }\n\n      var pad = $.extend({\n        top: 0,\n        bottom: 0\n      }, options.padding || {});\n      $this.data(\"pin\", {\n        pad: pad,\n        from: (options.containerSelector ? containerOffset.top : offset.top) - pad.top,\n        to: containerOffset.top + $container.height() - $this.outerHeight() - pad.bottom,\n        end: containerOffset.top + $container.height(),\n        parentTop: parentOffset.top\n      });\n      $this.css({\n        width: $this.outerWidth()\n      });\n      $this.parent().css(\"height\", $this.outerHeight());\n    }\n  };\n\n  var onScroll = function onScroll() {\n    if (disabled) {\n      return;\n    }\n\n    scrollY = $window.scrollTop();\n    var elmts = [];\n\n    for (var i = 0, len = elements.length; i < len; i++) {\n      var $this = $(elements[i]),\n          data = $this.data(\"pin\");\n\n      if (!data) {\n        // Removed element\n        continue;\n      }\n\n      elmts.push($this);\n      var from = data.from - data.pad.bottom,\n          to = data.to - data.pad.top;\n\n      if (from + $this.outerHeight() > data.end) {\n        $this.css('position', '');\n        continue;\n      }\n\n      if (from < scrollY && to > scrollY) {\n        !($this.css(\"position\") == \"fixed\") && $this.css({\n          left: $this.offset().left,\n          top: data.pad.top\n        }).css(\"position\", \"fixed\");\n\n        if (options.activeClass) {\n          $this.addClass(options.activeClass);\n        }\n      } else if (scrollY >= to) {\n        $this.css({\n          left: \"\",\n          top: to - data.parentTop + data.pad.top\n        }).css(\"position\", \"absolute\");\n\n        if (options.activeClass) {\n          $this.addClass(options.activeClass);\n        }\n      } else {\n        $this.css({\n          position: \"\",\n          top: \"\",\n          left: \"\"\n        });\n\n        if (options.activeClass) {\n          $this.removeClass(options.activeClass);\n        }\n      }\n    }\n\n    elements = elmts;\n  };\n\n  var update = function update() {\n    recalculateLimits();\n    onScroll();\n  };\n\n  this.each(function () {\n    var $this = $(this),\n        data = $(this).data('pin') || {};\n\n    if (data && data.update) {\n      return;\n    }\n\n    elements.push($this);\n    $(\"img\", this).one(\"load\", recalculateLimits);\n    data.update = update;\n    $(this).data('pin', data);\n  });\n  $window.scroll(onScroll);\n  $window.resize(function () {\n    recalculateLimits();\n  });\n  recalculateLimits();\n  window.onload = update;\n  return this;\n};"]}