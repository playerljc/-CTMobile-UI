{"version":3,"sources":["treenode.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_uiUtil","selectorPrefix","normalTriggerIcon","remoteTriggerIcon","checkboxIcon","checkall","uncheckall","unchecked","radioIcon","checked","initVar","this","itemEl","el","querySelector","concat","itemTriggerEl","itemIconEl","itemLabelEl","itemTextEl","itemInputEl","itemInputFieldEl","childrenEl","initEvents","_this","loadType","config","addEventListener","extend","_expand","call","isExpand","isload","lock","changeRemoteIcon","events","trigger","onLoadRemoteSuccess","bind","onLoadRemoteError","onLoadRemoteComplete","isChecked","getType","isCheckboxType","_this$config$checkedC","checkedCascade","isLeaf","i","childrenNodes","length","checkedDetail","check","_this$config$checkedC2","detailItemInputsRecursive","Dom6","removeClass","addClass","getChildrenPaddingLeft","_this$config","leaf","type","icon","paddingLeft","changeNormalIcon","expaned","children","nodeGlobalConfig","nodeConfig","classList","add","tree","renderChildren","parentNode","globalConfig","refresh","renderInput","_this$config2","_this$config2$checked","renderCheckboxCheckAll","renderCheckboxUncheckall","renderCheckboxUnchecked","render","_this$config3","label","iconColor","_this$config3$attr","attr","createElement","objectToDataSet","TreeNode","_ref","JSON","parse","stringify","assign","_this$config4","_this$config4$expand","expand","key","treeNode","arguments","undefined","style","appendChild","getEl","push","newNode","append","prepend","unshift","index","findIndex","n","insertBefore","splice","insertAfter","replaceChild","replaceNode","remove","dataset","getAttr","innerText","newIcon","self","_this$config5","srcIcon","createIcon","color","contains","indexOf","checkboxNodes","checkeds","filter","node","checkboxDrillUp","isSubChecked","_this$config$checkedC3","getParentNode","childrens","_this$config$checkedC4","hasType","_default"],"mappings":"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","file":"treenode.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _uiUtil = require(\"@ctmobile/ui-util\");\n\nvar selectorPrefix = 'ct-tree-';\nvar normalTriggerIcon = 'fa fa-caret-right';\nvar remoteTriggerIcon = 'fa fa-spinner';\nvar checkboxIcon = {\n  checkall: 'check-square',\n  // checkbox选中\n  uncheckall: 'minus-square',\n  // checkbox减号\n  unchecked: 'square-o' // checkbox默认\n\n};\nvar radioIcon = {\n  checked: 'circle',\n  //  radio选中\n  unchecked: 'circle-o' // radio未选中\n\n};\n/**\r\n * initVar\r\n * @access private\r\n */\n\nfunction initVar() {\n  this.itemEl = this.el.querySelector(\".\".concat(selectorPrefix, \"item\"));\n  this.itemTriggerEl = this.itemEl.querySelector(\".\".concat(selectorPrefix, \"item-trigger\"));\n  this.itemIconEl = this.itemEl.querySelector(\".\".concat(selectorPrefix, \"item-icon\"));\n  this.itemLabelEl = this.itemEl.querySelector(\".\".concat(selectorPrefix, \"item-label\"));\n  this.itemTextEl = this.itemLabelEl.querySelector(\".\".concat(selectorPrefix, \"item-text\"));\n  this.itemInputEl = this.itemEl.querySelector(\".\".concat(selectorPrefix, \"item-input\"));\n  this.itemInputFieldEl = this.itemEl.querySelector(\".\".concat(selectorPrefix, \"item-input-field\"));\n  this.childrenEl = this.el.querySelector(\".\".concat(selectorPrefix, \"children\"));\n}\n/**\r\n * initEvents\r\n * @access private\r\n */\n\n\nfunction initEvents() {\n  var _this = this;\n\n  var loadType = this.config.loadType;\n\n  if (this.itemTriggerEl) {\n    // expand\n    this.itemTriggerEl.addEventListener('click', function () {\n      // 展开\n      if (!_this.extend) {\n        if (loadType === 'remote') {\n          if (_this.isload) {\n            _expand.call(_this, !_this.isExpand);\n          } else {\n            if (_this.lock) return false;\n            _this.lock = true; // 先loading\n\n            changeRemoteIcon.call(_this);\n\n            _this.events.trigger('loadRemote', _this, onLoadRemoteSuccess.bind(_this), onLoadRemoteError.bind(_this), onLoadRemoteComplete.bind(_this));\n          }\n        } else {\n          _expand.call(_this, !_this.isExpand);\n        }\n      } else {\n        _expand.call(_this, !_this.isExpand);\n      }\n    });\n  } // 点击了label\n\n\n  this.itemLabelEl.addEventListener('click', function () {\n    _this.events.trigger('click', _this);\n  }); // 点击了checkbox\n\n  if (this.itemInputEl) {\n    this.itemInputEl.addEventListener('click', function () {\n      if (_this.isChecked()) {\n        if (_this.getType() === 'checkbox') {\n          _this.checked(false);\n        }\n      } else if (_this.getType() === 'checkbox') {\n        _this.checked(true);\n      }\n    });\n  }\n}\n/**\r\n * checked\r\n * @param {boolean} - checked\r\n * @access private\r\n */\n\n\nfunction checked(checked) {\n  if (this.isCheckboxType()) {\n    if (this.getType() === 'checkbox') {\n      this.itemInputFieldEl.checked = checked;\n      var _this$config$checkedC = this.config.checkedCascade,\n          checkedCascade = _this$config$checkedC === void 0 ? true : _this$config$checkedC;\n\n      if (checkedCascade && !this.isLeaf()) {\n        for (var i = 0; i < this.childrenNodes.length; i++) {\n          var treeNode = this.childrenNodes[i];\n          treeNode.checked(checked);\n        }\n      }\n    }\n  }\n}\n/**\r\n * checkedDetail\r\n * @param {boolean} - check\r\n * @access private\r\n */\n\n\nfunction checkedDetail(check) {\n  var _this$config$checkedC2 = this.config.checkedCascade,\n      checkedCascade = _this$config$checkedC2 === void 0 ? true : _this$config$checkedC2;\n  checked.call(this, check);\n\n  if (checkedCascade) {\n    if (this.isLeaf()) {\n      this.events.trigger('checked', this, check);\n      this.detailItemInputsRecursive();\n    }\n  } else {\n    this.detailItemInputsRecursive();\n    this.events.trigger('checked', this, check);\n  }\n}\n/**\r\n * changeRemoteIcon\r\n * @access private\r\n */\n\n\nfunction changeRemoteIcon() {\n  _uiUtil.Dom6.removeClass(this.itemTriggerEl, normalTriggerIcon);\n\n  _uiUtil.Dom6.addClass(this.itemTriggerEl, \"\".concat(remoteTriggerIcon, \" animation\"));\n}\n/**\r\n * getChildrenPaddingLeft\r\n * @access private\r\n * @return {number}\r\n */\n\n\nfunction getChildrenPaddingLeft() {\n  var _this$config = this.config,\n      leaf = _this$config.leaf,\n      type = _this$config.type,\n      icon = _this$config.icon;\n  var paddingLeft = 4;\n\n  if (!leaf) {\n    paddingLeft += 22;\n  }\n\n  if (type !== 'normal') {\n    if (icon) {\n      paddingLeft += 19;\n    } else {\n      paddingLeft += 22;\n    }\n  } else if (icon) {\n    paddingLeft += 19;\n  } // item-trigger 22\n  // item-input 22\n  // item-icon 19\n  // 4\n\n\n  return paddingLeft;\n}\n/**\r\n * changeNormalIcon\r\n * @access private\r\n */\n\n\nfunction changeNormalIcon() {\n  _uiUtil.Dom6.removeClass(this.itemTriggerEl, \"\".concat(remoteTriggerIcon, \" animation\"));\n\n  _uiUtil.Dom6.addClass(this.itemTriggerEl, normalTriggerIcon);\n}\n/**\r\n * expand\r\n * @param {Boolean} - expand\r\n * @access private\r\n */\n\n\nfunction _expand(expaned) {\n  if (this.isLeaf()) return false;\n  if (this.isExpand === expaned) return false;\n\n  if (expaned) {\n    _uiUtil.Dom6.addClass(this.el, 'expand');\n  } else {\n    _uiUtil.Dom6.removeClass(this.el, 'expand');\n  }\n\n  this.isExpand = expaned;\n  this.events.trigger('expand', this, this.isExpand);\n}\n/**\r\n * onLoadRemote\r\n * @param {Array} - children\r\n * @access private\r\n */\n\n\nfunction onLoadRemoteSuccess(children) {\n  var nodeGlobalConfig = this.nodeGlobalConfig,\n      nodeConfig = this.nodeConfig; // if (children.length <= 0) return false;\n\n  if (children.length <= 0) {\n    nodeConfig.leaf = true;\n    this.itemTriggerEl.classList.add('invisible');\n  } // 清空之前的\n\n\n  this.childrenNodes = [];\n  nodeConfig.children = children;\n  this.tree.renderChildren({\n    parentNode: this,\n    globalConfig: nodeGlobalConfig,\n    config: nodeConfig\n  });\n\n  _expand.call(this, true);\n\n  changeNormalIcon.call(this);\n  this.isload = true;\n  this.refresh();\n  this.lock = false;\n}\n/**\r\n * onLoadRemoteError\r\n * @access private\r\n */\n\n\nfunction onLoadRemoteError() {\n  changeNormalIcon.call(this);\n  this.lock = false;\n}\n/**\r\n * onLoadRemoteComplete\r\n * @access private\r\n */\n\n\nfunction onLoadRemoteComplete() {\n  changeNormalIcon.call(this);\n  this.lock = false;\n}\n/**\r\n * renderInput\r\n * @access private\r\n * @return {String}\r\n */\n\n\nfunction renderInput() {\n  var _this$config2 = this.config,\n      type = _this$config2.type,\n      _this$config2$checked = _this$config2.checked,\n      checked = _this$config2$checked === void 0 ? false : _this$config2$checked,\n      leaf = _this$config2.leaf; // 普通的节点\n\n  if (type === 'normal') {\n    return '';\n  } else if (type === 'checkbox') {\n    // checkbox节点\n    // 选中\n    // if(isLeaf() && checked) {\n    //   渲染成选中\n    //   if(父节点的所有checkbox节点都选中) {\n    //     父节点渲染成选中状态 - 一直向上追溯\n    //   }\n    // }\n    // let str;\n    // // 叶子节点\n    // if (this.isLeaf()) {\n    //   if (checked) {\n    //     // 叶子节点且选中\n    //     str = `<span class=\"${selectorPrefix}item-input fa fa-${checkboxIcon.checkall}\" >\n    //             <input class=\"${selectorPrefix}item-input-field\" checked type=\"checkbox\" />\n    //            </span>`;\n    //     //   if(父节点的所有checkbox节点都选中) {\n    //     //     父节点渲染成选中状态 - 一直向上追溯\n    //     //   }\n    //     // Drill up\n    //     if (this.parentNode) {\n    //       this.parentNode.checkboxDrillUp();\n    //     }\n    //   } else {\n    //     // 叶子节点非选中\n    //     str = `<span class=\"${selectorPrefix}item-input fa fa-${checkboxIcon.unchecked}\" >\n    //             <input class=\"${selectorPrefix}item-input-field\" type=\"checkbox\" />\n    //            </span>`;\n    //   }\n    // } else {\n    //   // 非叶子节点\n    //   str = `<span class=\"${selectorPrefix}item-input fa fa-${checkboxIcon.unchecked}\" >\n    //           <input class=\"${selectorPrefix}item-input-field\" type=\"checkbox\" />\n    //          </span>`;\n    // }\n    var str = '';\n\n    if (leaf) {\n      if (checked) {\n        str = \"<span class=\\\"\".concat(selectorPrefix, \"item-input fa fa-\").concat(checkboxIcon.checkall, \"\\\" >\\n              <input class=\\\"\").concat(selectorPrefix, \"item-input-field\\\" checked type=\\\"checkbox\\\" />\\n             </span>\");\n      } else {\n        str = \"<span class=\\\"\".concat(selectorPrefix, \"item-input fa fa-\").concat(checkboxIcon.unchecked, \"\\\" >\\n              <input class=\\\"\").concat(selectorPrefix, \"item-input-field\\\" type=\\\"checkbox\\\" />\\n             </span>\");\n      }\n    } else {\n      str = \"<span class=\\\"\".concat(selectorPrefix, \"item-input fa fa-\").concat(checkboxIcon.unchecked, \"\\\" >\\n              <input class=\\\"\").concat(selectorPrefix, \"item-input-field\\\" type=\\\"checkbox\\\" />\\n             </span>\");\n    }\n\n    return str;\n  } else if (type === 'radio') {\n    // radio节点\n    return \"<span class=\\\"\".concat(selectorPrefix, \"item-input fa fa-\").concat(radioIcon.unchecked, \"\\\" >\\n             <input class=\\\"\").concat(selectorPrefix, \"item-input-field\\\" type=\\\"checkbox\\\" />\\n            </span>\");\n  } else {\n    // 没有匹配的类型\n    return '';\n  }\n}\n/**\r\n * renderCheckboxCheckAll\r\n * @access private\r\n */\n\n\nfunction renderCheckboxCheckAll() {\n  _uiUtil.Dom6.removeClass(this.itemInputEl, \"fa-\".concat(checkboxIcon.uncheckall, \" fa-\").concat(checkboxIcon.unchecked));\n\n  _uiUtil.Dom6.addClass(this.itemInputEl, \"fa-\".concat(checkboxIcon.checkall));\n}\n/**\r\n * renderCheckboxUncheckall\r\n * @access private\r\n */\n\n\nfunction renderCheckboxUncheckall() {\n  _uiUtil.Dom6.removeClass(this.itemInputEl, \"fa-\".concat(checkboxIcon.checkall, \" fa-\").concat(checkboxIcon.unchecked));\n\n  _uiUtil.Dom6.addClass(this.itemInputEl, \"fa-\".concat(checkboxIcon.uncheckall));\n}\n/**\r\n * renderCheckboxUnchecked\r\n * @access private\r\n */\n\n\nfunction renderCheckboxUnchecked() {\n  _uiUtil.Dom6.removeClass(this.itemInputEl, \"fa-\".concat(checkboxIcon.checkall, \" fa-\").concat(checkboxIcon.uncheckall));\n\n  _uiUtil.Dom6.addClass(this.itemInputEl, \"fa-\".concat(checkboxIcon.unchecked));\n}\n/**\r\n * render\r\n * @access private\r\n */\n\n\nfunction render() {\n  var _this$config3 = this.config,\n      label = _this$config3.label,\n      leaf = _this$config3.leaf,\n      icon = _this$config3.icon,\n      iconColor = _this$config3.iconColor,\n      _this$config3$attr = _this$config3.attr,\n      attr = _this$config3$attr === void 0 ? {} : _this$config3$attr;\n  this.el = _uiUtil.Dom6.createElement(\"<div class=\\\"\".concat(selectorPrefix, \"node \").concat(this.isExpand ? 'expand' : '', \"\\\">\\n        <div class=\\\"\").concat(selectorPrefix, \"item\\\">\\n          <span class=\\\"\").concat(selectorPrefix, \"item-trigger \").concat(leaf ? 'invisible' : '', \" \").concat(normalTriggerIcon, \"\\\"></span>\\n          \").concat(renderInput.call(this), \"\\n          <span class=\\\"\").concat(selectorPrefix, \"item-icon fa fa-\").concat(icon, \" \").concat(!icon ? 'invisible' : '', \"\\\" style=\\\"color:\").concat(iconColor || '', \"\\\"></span>\\n          <span class=\\\"\").concat(selectorPrefix, \"item-label\\\">\\n            <span class=\\\"\").concat(selectorPrefix, \"item-text\\\">\").concat(label, \"</span>\\n          </span>\\n        </div>\\n      </div>\\n    \"));\n\n  _uiUtil.Dom6.objectToDataSet(attr, this.el);\n\n  initVar.call(this);\n  initEvents.call(this);\n}\n/**\r\n * TreeNode\r\n * @class TreeNode\r\n * @classdesc TreeNode\r\n */\n\n\nvar TreeNode =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * constructor\r\n   * @constructor\r\n   * @param {Object} - globalConfig 全局的节点配置\r\n   * @param {Object} - config 节点的配置\r\n   * @param {Tree} - tree Tree\r\n   * @param {TreeNode} - parentNode 父节点\r\n   */\n  function TreeNode(_ref) {\n    var globalConfig = _ref.globalConfig,\n        config = _ref.config,\n        tree = _ref.tree,\n        parentNode = _ref.parentNode;\n    (0, _classCallCheck2[\"default\"])(this, TreeNode);\n    this.nodeGlobalConfig = JSON.parse(JSON.stringify(globalConfig));\n    this.nodeConfig = JSON.parse(JSON.stringify(config));\n    this.config = JSON.parse(JSON.stringify(Object.assign({}, globalConfig, config)));\n    this.tree = tree;\n    this.parentNode = parentNode; // 子节点\n\n    this.childrenNodes = []; // 如果loadType==='remote'时，判断是否加载过数据\n\n    this.isload = false; // 如果loadType==='remote'时，的节流锁\n\n    this.lock = false;\n    this.events = tree.events;\n    var _this$config4 = this.config,\n        _this$config4$expand = _this$config4.expand,\n        expand = _this$config4$expand === void 0 ? true : _this$config4$expand,\n        loadType = _this$config4.loadType; // 节点是否展开\n\n    this.isExpand = loadType === 'remote' ? false : expand;\n    render.call(this);\n  }\n  /**\r\n   * append\r\n   * tree是一个完整的对象，已经调用完renderChildren\r\n   * @param {TreeNode} - treeNode\r\n   * @param {boolean} - refresh\r\n   */\n\n\n  (0, _createClass2[\"default\"])(TreeNode, [{\n    key: \"append\",\n    value: function append(treeNode) {\n      var refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var loadType = this.config.loadType;\n\n      if (this.isLeaf()) {\n        this.childrenEl = _uiUtil.Dom6.createElement('<div class=\"ct-tree-children\"></div>');\n        var paddingLeft = getChildrenPaddingLeft.call(this);\n        this.childrenEl.style.paddingLeft = \"\".concat(paddingLeft, \"px\");\n        this.el.appendChild(this.childrenEl); // if (loadType !== 'remote') {\n        //   this.itemTriggerEl = Dom6.createElement(`<span class=\"${selectorPrefix}item-trigger ${normalTriggerIcon}\"></span>`);\n        //   Dom6.prepend(this.itemEl, this.itemTriggerEl);\n        // }\n      }\n\n      this.childrenEl.appendChild(treeNode.getEl());\n      this.childrenNodes.push(treeNode);\n\n      _uiUtil.Dom6.removeClass(this.itemTriggerEl, 'invisible');\n\n      if (loadType === 'remote' && !this.isload) {\n        this.isload = true;\n      }\n\n      if (refresh) {\n        this.refresh();\n      }\n    }\n    /**\r\n     * appendByConfig\r\n     * @param {Object} - config\r\n     */\n\n  }, {\n    key: \"appendByConfig\",\n    value: function appendByConfig(config) {\n      var globalConfig = this.nodeGlobalConfig;\n      var newNode = new TreeNode({\n        globalConfig: globalConfig,\n        config: config,\n        tree: this.tree,\n        parentNode: this\n      });\n      this.tree.renderChildren({\n        parentNode: newNode,\n        globalConfig: globalConfig,\n        config: config\n      });\n      this.append(newNode);\n      this.refresh();\n    }\n    /**\r\n     * prepend\r\n     * @param {TreeNode} - treeNode\r\n     */\n\n  }, {\n    key: \"prepend\",\n    value: function prepend(treeNode) {\n      if (this.isLeaf()) this.append(treeNode);\n\n      _uiUtil.Dom6.prepend(this.childrenEl, treeNode.getEl());\n\n      this.childrenNodes.unshift(treeNode);\n      this.refresh();\n    }\n    /**\r\n     * prependByConfig\r\n     * @param {Object} - config\r\n     */\n\n  }, {\n    key: \"prependByConfig\",\n    value: function prependByConfig(config) {\n      var globalConfig = this.nodeGlobalConfig;\n      var newNode = new TreeNode({\n        globalConfig: globalConfig,\n        config: config,\n        tree: this.tree,\n        parentNode: this\n      });\n      this.tree.renderChildren({\n        parentNode: newNode,\n        globalConfig: globalConfig,\n        config: config\n      });\n      this.prepend(newNode);\n    }\n    /**\r\n     * insertBefore\r\n     * @param {TreeNode} - treeNode\r\n     * @param {TreeNode} - newNode\r\n     */\n\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(treeNode, newNode) {\n      if (!treeNode || !newNode) return false;\n      var index = this.childrenNodes.findIndex(function (n) {\n        return n === treeNode;\n      });\n\n      if (index === -1) {\n        this.append(newNode);\n        this.refresh();\n      } else if (index === 0) {\n        this.prepend(newNode);\n      } else {\n        // dom\n        this.childrenEl.insertBefore(newNode.getEl(), treeNode.getEl()); // array\n\n        this.childrenNodes.splice(index, 0, newNode);\n        this.refresh();\n      }\n    }\n    /**\r\n     * insertBeforeByConfig\r\n     * @param {TreeNode} - treeNode\r\n     * @param {Object} - config\r\n     */\n\n  }, {\n    key: \"insertBeforeByConfig\",\n    value: function insertBeforeByConfig(treeNode, config) {\n      var globalConfig = this.nodeGlobalConfig;\n      var newNode = new TreeNode({\n        globalConfig: globalConfig,\n        config: config,\n        tree: this.tree,\n        parentNode: this\n      });\n      this.tree.renderChildren({\n        parentNode: newNode,\n        globalConfig: globalConfig,\n        config: config\n      });\n      this.insertBefore(treeNode, newNode);\n    }\n    /**\r\n     * insertAfter\r\n     * @param {TreeNode} - treeNode\r\n     * @param {TreeNode} - newNode\r\n     */\n\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(treeNode, newNode) {\n      if (!treeNode || !newNode) return false;\n      var index = this.childrenNodes.findIndex(function (n) {\n        return n === treeNode;\n      });\n\n      if (index === -1) {\n        this.append(newNode);\n        this.refresh();\n      } else if (index === this.childrenNodes.length - 1) {\n        this.prepend(newNode);\n      } else {\n        // dom\n        _uiUtil.Dom6.insertAfter(newNode.getEl(), treeNode.getEl()); // array\n\n\n        this.childrenNodes.splice(index + 1, 0, newNode);\n        this.refresh();\n      }\n    }\n    /**\r\n     * insertAfterByConfig\r\n     * @param {TreeNode} - treeNode\r\n     * @param {Object} - config\r\n     */\n\n  }, {\n    key: \"insertAfterByConfig\",\n    value: function insertAfterByConfig(treeNode, config) {\n      var globalConfig = this.nodeGlobalConfig;\n      var newNode = new TreeNode({\n        globalConfig: globalConfig,\n        config: config,\n        tree: this.tree,\n        parentNode: this\n      });\n      this.tree.renderChildren({\n        parentNode: newNode,\n        globalConfig: globalConfig,\n        config: config\n      });\n      this.insertAfter(treeNode, newNode);\n    }\n    /**\r\n     * replaceNode\r\n     * @param {TreeNode} - treeNode\r\n     * @param {TreeNode} - newNode\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"replaceNode\",\n    value: function replaceNode(treeNode, newNode) {\n      if (!treeNode || !newNode) return false;\n      var index = this.childrenNodes.findIndex(function (n) {\n        return n === treeNode;\n      });\n      if (index === -1) return false;\n      this.childrenEl.replaceChild(newNode.getEl(), treeNode.getEl());\n      this.childrenNodes.splice(index, 1, newNode);\n      this.refresh();\n    }\n    /**\r\n     * replaceNodeByConfig\r\n     * @param {TreeNode} - treeNode\r\n     * @param {Object} - config\r\n     */\n\n  }, {\n    key: \"replaceNodeByConfig\",\n    value: function replaceNodeByConfig(treeNode, config) {\n      var globalConfig = this.nodeGlobalConfig;\n      var newNode = new TreeNode({\n        globalConfig: globalConfig,\n        config: config,\n        tree: this.tree,\n        parentNode: this\n      });\n      this.tree.renderChildren({\n        parentNode: newNode,\n        globalConfig: globalConfig,\n        config: config\n      });\n      this.replaceNode(treeNode, newNode);\n    }\n    /**\r\n     * removeChildren\r\n     * @param {TreeNode} treeNode\r\n     */\n\n  }, {\n    key: \"removeChildren\",\n    value: function removeChildren(treeNode) {\n      if (!treeNode) return false;\n      if (this.isLeaf()) return false;\n      var index = this.childrenNodes.findIndex(function (n) {\n        return n === treeNode;\n      });\n      if (index === -1) return false;\n      this.childrenNodes.splice(index, 1);\n\n      _uiUtil.Dom6.remove(treeNode.getEl());\n\n      if (this.isLeaf()) {\n        _uiUtil.Dom6.addClass(this.itemTriggerEl, 'invisible');\n      }\n\n      this.refresh();\n    }\n    /**\r\n     * childrenNodes\r\n     * @return {Array}\r\n     */\n\n  }, {\n    key: \"childrens\",\n    value: function childrens() {\n      return [].concat(this.childrenNodes);\n    }\n    /**\r\n     * expand\r\n     * @param {Boolean} - expaned\r\n     */\n\n  }, {\n    key: \"expand\",\n    value: function expand(expaned) {\n      _expand.call(this, expaned);\n    }\n    /**\r\n     * resetRemoteNode\r\n     * 重置loadType === 'remote' 的节点使其能够重新载入数据，并且先闭合节点\r\n     */\n\n  }, {\n    key: \"resetRemoteNode\",\n    value: function resetRemoteNode() {\n      var loadType = this.config.loadType;\n      if (loadType !== 'remote') return false;\n      this.expand(false);\n      this.isload = false;\n    }\n    /**\r\n     * isExpand\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isExpand\",\n    value: function isExpand() {\n      return this.isExpand;\n    }\n    /**\r\n     * getAttr\r\n     * @param {String} - attr\r\n     * @return {String} - value\r\n     */\n\n  }, {\n    key: \"getAttr\",\n    value: function getAttr(attr) {\n      return this.el.dataset[attr];\n    }\n    /**\r\n     * setAttr\r\n     * @param {String} - key\r\n     * @param {String} - value\r\n     */\n\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(key, value) {\n      this.el.dataset[key] = value;\n    }\n    /**\r\n     * hasAttr\r\n     * @param {String} - key\r\n     * @param {String} - value\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"hasAttr\",\n    value: function hasAttr(key, value) {\n      var srcValue = this.getAttr(key);\n      return value === srcValue;\n    }\n    /**\r\n     * getLabel\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.itemTextEl.innerText;\n    }\n    /**\r\n     * setLabel\r\n     * @param {String} - label\r\n     */\n\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(label) {\n      this.itemTextEl.innerText = label;\n    }\n    /**\r\n     * setIcon\r\n     * @param {String} - icon\r\n     */\n\n  }, {\n    key: \"setIcon\",\n    value: function setIcon(newIcon) {\n      var self = this;\n      var _this$config5 = this.config,\n          srcIcon = _this$config5.icon,\n          iconColor = _this$config5.iconColor;\n\n      function createIcon() {\n        self.config.icon = newIcon;\n        self.itemIconEl = _uiUtil.Dom6.createElement(\"<span class=\\\"\".concat(selectorPrefix, \"item-icon fa fa-\").concat(newIcon, \"\\\" style=\\\"color:\").concat(iconColor || '', \"\\\"></span>\"));\n\n        _uiUtil.Dom6.prepend(self.itemLabelEl, self.itemIconEl);\n      }\n\n      if (!srcIcon) {\n        createIcon();\n      } else if (!this.itemIconEl) {\n        createIcon();\n      } else {\n        this.config.icon = newIcon;\n\n        _uiUtil.Dom6.removeClass(this.itemIconEl, \"fa fa-\".concat(srcIcon));\n\n        _uiUtil.Dom6.addClass(this.itemIconEl, \"fa fa-\".concat(newIcon));\n      }\n    }\n    /**\r\n     * getIcon\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"getIcon\",\n    value: function getIcon() {\n      return this.config.icon;\n    }\n    /**\r\n     * setIconColor\r\n     * @param {String} - iconColor\r\n     */\n\n  }, {\n    key: \"setIconColor\",\n    value: function setIconColor(iconColor) {\n      var icon = this.config.icon;\n      if (!icon) return false;\n      if (!this.itemIconEl) return false;\n      this.config.iconColor = iconColor;\n      this.itemIconEl.style.color = iconColor;\n    }\n    /**\r\n     * getIconColor\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"getIconColor\",\n    value: function getIconColor() {\n      return this.config.iconColor;\n    }\n    /**\r\n     * isLeaf\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isLeaf\",\n    value: function isLeaf() {\n      return this.childrenNodes.length <= 0;\n    }\n    /**\r\n     * isRoot\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"isRoot\",\n    value: function isRoot() {\n      return !!this.parentNode;\n    }\n    /**\r\n     * getEl\r\n     * @return {HTMLElement}\r\n     */\n\n  }, {\n    key: \"getEl\",\n    value: function getEl() {\n      return this.el;\n    }\n    /**\r\n     * checked\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"isChecked\",\n    value: function isChecked() {\n      if (this.isCheckboxType()) {\n        if (this.itemInputFieldEl) {\n          return this.itemInputFieldEl.checked;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n    /**\r\n     * isSubChecked\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"isSubChecked\",\n    value: function isSubChecked() {\n      if (this.isCheckboxType()) {\n        if (this.itemInputEl) {\n          return this.itemInputEl.classList.contains(\"fa-\".concat(checkboxIcon.uncheckall));\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n    /**\r\n     * getType\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return this.config.type;\n    }\n    /**\r\n     * getParentNode\r\n     * @return {TreeNode}\r\n     */\n\n  }, {\n    key: \"getParentNode\",\n    value: function getParentNode() {\n      return this.parentNode;\n    }\n    /**\r\n     * isCheckboxType\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"isCheckboxType\",\n    value: function isCheckboxType() {\n      return ['checkbox', 'radio'].indexOf(this.config.type) !== -1;\n    }\n    /**\r\n     * checkboxDrillUp\r\n     */\n\n  }, {\n    key: \"checkboxDrillUp\",\n    value: function checkboxDrillUp() {\n      //   if(父节点的所有checkbox节点都选中) {\n      //     父节点渲染成选中状态 - 一直向上追溯\n      //   }\n      var isCheckbox = this.isCheckboxType();\n      if (!isCheckbox) return false;\n      var checkboxNodes = [];\n\n      for (var i = 0; i < this.childrenNodes.length; i++) {\n        var treeNode = this.childrenNodes[i];\n\n        if (treeNode.itemInputFieldEl) {\n          checkboxNodes.push(treeNode);\n        }\n      }\n\n      var checkeds = checkboxNodes.filter(function (node) {\n        return node.isChecked();\n      }); // 子元素都选中了\n\n      if (checkeds.length === checkboxNodes.length) {\n        this.itemInputFieldEl.checked = true;\n        renderCheckboxCheckAll.call(this);\n        this.events.trigger('checked', this, true);\n\n        if (this.parentNode) {\n          this.parentNode.checkboxDrillUp();\n        }\n      } else {\n        this.itemInputFieldEl.checked = false;\n\n        if (checkeds.length !== 0) {\n          // 子节点有选中的\n          renderCheckboxUncheckall.call(this);\n        } else {\n          var subCheckeds = checkboxNodes.filter(function (node) {\n            return node.isSubChecked();\n          });\n\n          if (subCheckeds.length !== 0) {\n            renderCheckboxUncheckall.call(this);\n          } else {\n            renderCheckboxUnchecked.call(this);\n          }\n        }\n\n        this.events.trigger('checked', this, false);\n\n        if (this.parentNode) {\n          this.parentNode.checkboxDrillUp();\n        }\n      }\n    }\n    /**\r\n     * detailItemInputsRecursive\r\n     */\n\n  }, {\n    key: \"detailItemInputsRecursive\",\n    value: function detailItemInputsRecursive() {\n      var _this$config$checkedC3 = this.config.checkedCascade,\n          checkedCascade = _this$config$checkedC3 === void 0 ? true : _this$config$checkedC3;\n\n      if (checkedCascade) {\n        if (this.isLeaf()) {\n          if (this.getType() === 'checkbox') {\n            if (this.isChecked()) {\n              renderCheckboxCheckAll.call(this);\n            } else {\n              renderCheckboxUnchecked.call(this);\n            }\n\n            var parentNode = this.getParentNode();\n\n            if (parentNode) {\n              parentNode.checkboxDrillUp();\n            }\n          }\n        } else {\n          var children = this.childrens();\n\n          for (var i = 0; i < children.length; i++) {\n            children[i].detailItemInputsRecursive();\n          }\n        }\n      } else if (this.isChecked()) {\n        renderCheckboxCheckAll.call(this);\n      } else {\n        renderCheckboxUnchecked.call(this);\n      }\n    }\n    /**\r\n     * checked\r\n     * @param {boolean} - check\r\n     */\n\n  }, {\n    key: \"checked\",\n    value: function checked(check) {\n      var _this$config$checkedC4 = this.config.checkedCascade,\n          checkedCascade = _this$config$checkedC4 === void 0 ? true : _this$config$checkedC4;\n\n      if (!checkedCascade) {\n        if (this.events.hasType('beforeChecked')) {\n          var flag = this.events.trigger('beforeChecked', this, check);\n\n          if (flag) {\n            checkedDetail.call(this, check);\n          }\n        } else {\n          checkedDetail.call(this, check);\n        }\n      } else {\n        checkedDetail.call(this, check);\n      }\n    }\n    /**\r\n     * refresh\r\n     */\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var parentNode = this.getParentNode();\n\n      if (parentNode) {\n        parentNode.detailItemInputsRecursive();\n      } else {\n        this.detailItemInputsRecursive();\n      }\n    }\n  }]);\n  return TreeNode;\n}();\n\nvar _default = TreeNode;\nexports[\"default\"] = _default;"]}